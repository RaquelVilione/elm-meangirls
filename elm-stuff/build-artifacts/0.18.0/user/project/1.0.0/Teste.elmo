var _user$project$Teste$viewGeneros = function (genero) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(
				_elm_lang$core$Basics$toString(genero.id)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(genero.nome),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewValidation = function (model) {
	var _p0 = _elm_lang$core$Native_Utils.eq(model.usuario.senha, model.usuario.confirmarSenha) ? {ctor: '_Tuple2', _0: 'green', _1: ''} : {ctor: '_Tuple2', _0: 'white', _1: 'As senhas são diferentes!'};
	var color = _p0._0;
	var message = _p0._1;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: color},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '10px'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewIndex = function (model) {
	return A2(
		_elm_lang$html$Html$span,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$Teste$mudaString = A3(
	_elm_lang$core$Regex$replace,
	_elm_lang$core$Regex$All,
	_elm_lang$core$Regex$regex(' '),
	function (_p1) {
		return '%20';
	});
var _user$project$Teste$tiraAspas = function (palavra) {
	return A2(
		_elm_lang$core$String$filter,
		function (x) {
			return !_elm_lang$core$Native_Utils.eq(
				x,
				_elm_lang$core$Native_Utils.chr('\"'));
		},
		palavra);
};
var _user$project$Teste$viewEpisodios = function (idE) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('episodio'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Episódio ',
					_user$project$Teste$tiraAspas(
						_elm_lang$core$Basics$toString(idE)))),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewTemporada = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('row temporada'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('col-lg-3 col-md-3 col-sm-3 col-xs-12'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$img,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('img-responsive'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$src(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'http://image.tmdb.org/t/p/w185/',
										_user$project$Teste$tiraAspas(
											_elm_lang$core$Basics$toString(model.poster_path)))),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('col-lg-9 col-md-9 col-sm-9 col-xs-12'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h1,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'TEMPORADA ',
										_user$project$Teste$tiraAspas(
											_elm_lang$core$Basics$toString(model.season_number)))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Número de episódios: ',
											_user$project$Teste$tiraAspas(
												_elm_lang$core$Basics$toString(model.episode_count)))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										_user$project$Teste$viewEpisodios,
										A2(_elm_lang$core$List$range, 1, model.episode_count))),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$viewSeriesG = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('col-lg-4 col-md-4 col-sm-6 col-xs-12 mb30'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('tutor-block'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('tutor-block'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('tutor-content'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$h5,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('tutor-title'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_user$project$Teste$tiraAspas(
													_elm_lang$core$Basics$toString(model.nome))),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('tutor-designation'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_elm_lang$core$Basics$toString(model.id)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewSeriesGenero = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Teste$viewSeriesG, model.seriesGenero));
};
var _user$project$Teste$postWhole = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectStringResponse(
					function (x) {
						return _elm_lang$core$Result$Ok(x);
					}),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Teste$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return {usuario: a, pesqserie: b, seriespopulares: c, seriesairingtoday: d, mensagem: e, symbol: f, stocks: g, serieAtual: h, airingtoday: i, temporadas: j, episodios: k, generos: l, generoEscolhido: m, genero: n, seriesGenero: o, view: p};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Teste$RespostaSG = function (a) {
	return {ctor: 'RespostaSG', _0: a};
};
var _user$project$Teste$getSeriesGenero = function (s) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Teste$RespostaSG,
		A2(
			_elm_lang$http$Http$get,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'https://api.themoviedb.org/3/discover/tv?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR&sort_by=popularity.desc&with_genres=',
				A2(_elm_lang$core$Basics_ops['++'], s, '&include_null_first_air_dates=false')),
			_user$project$Decodes$decodeSeriesGenero));
};
var _user$project$Teste$Buscar = {ctor: 'Buscar'};
var _user$project$Teste$GeneroEscolhido = function (a) {
	return {ctor: 'GeneroEscolhido', _0: a};
};
var _user$project$Teste$RespostaG = function (a) {
	return {ctor: 'RespostaG', _0: a};
};
var _user$project$Teste$getGeneros = A2(
	_elm_lang$http$Http$send,
	_user$project$Teste$RespostaG,
	A2(_elm_lang$http$Http$get, 'https://api.themoviedb.org/3/genre/tv/list?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR', _user$project$Decodes$decodeGeneros));
var _user$project$Teste$RespostaEps = function (a) {
	return {ctor: 'RespostaEps', _0: a};
};
var _user$project$Teste$getEpisodios = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Teste$RespostaEps,
		A2(
			_elm_lang$http$Http$get,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'https://api.themoviedb.org/3/tv/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_p3._0,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'/season/',
						A2(_elm_lang$core$Basics_ops['++'], _p3._1, '?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR')))),
			_user$project$Decodes$decodeEpisodios));
};
var _user$project$Teste$SubmitEpisodios = F2(
	function (a, b) {
		return {ctor: 'SubmitEpisodios', _0: a, _1: b};
	});
var _user$project$Teste$RespostaTemp = function (a) {
	return {ctor: 'RespostaTemp', _0: a};
};
var _user$project$Teste$getTemporadas = function (valor) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Teste$RespostaTemp,
		A2(
			_elm_lang$http$Http$get,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'https://api.themoviedb.org/3/tv/',
				A2(_elm_lang$core$Basics_ops['++'], valor, '?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=en-US')),
			_user$project$Decodes$decodeTemporadas));
};
var _user$project$Teste$SubmitTemporada = function (a) {
	return {ctor: 'SubmitTemporada', _0: a};
};
var _user$project$Teste$viewSerie = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('mostra-serie'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('container'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('col-lg-3 col-md-3 col-sm-3 col-xs-12'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('tutor-img'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$img,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('img-responsive'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$src(
															A2(
																_elm_lang$core$Basics_ops['++'],
																'http://image.tmdb.org/t/p/w185/',
																_user$project$Teste$tiraAspas(
																	_elm_lang$core$Basics$toString(
																		A2(_elm_lang$core$Maybe$withDefault, '', model.serieAtual.poster))))),
														_1: {ctor: '[]'}
													}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('col-lg-9 col-md-9 col-sm-9 col-xs-12'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('col-lg-12'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$h5,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('tutor-title'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text(
															_user$project$Teste$tiraAspas(
																_elm_lang$core$Basics$toString(model.serieAtual.nome))),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$div,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$id('rate'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$img,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('img-responsive'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$src('/imagens/favorite.png'),
																		_1: {ctor: '[]'}
																	}
																},
																{ctor: '[]'}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$span,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$class('tutor-designation'),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(
																			_elm_lang$core$Basics$toString(model.serieAtual.mediaNota)),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('col-lg-12 sinopse'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$p,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																_user$project$Teste$tiraAspas(
																	_elm_lang$core$Basics$toString(model.serieAtual.sinopse))),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$button,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('Adicionar a minha lista'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page-scroll text-center'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h1,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Visualizar Temporadas'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$href('#temporadas'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('btn btn-circle'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Teste$SubmitTemporada(model.serieAtual.id_)),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$i,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('fa fa-angle-down fa-2x animated'),
											_1: {ctor: '[]'}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('temporadas'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('container'),
								_1: {ctor: '[]'}
							}
						},
						A2(_elm_lang$core$List$map, _user$project$Teste$viewTemporada, model.temporadas)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Teste$VerSerie = function (a) {
	return {ctor: 'VerSerie', _0: a};
};
var _user$project$Teste$viewStock = function (stock) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('col-lg-4 col-md-4 col-sm-6 col-xs-12 mb30'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('tutor-block resultados'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('tutor-img'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'http://image.tmdb.org/t/p/w185/',
											_user$project$Teste$tiraAspas(
												_elm_lang$core$Basics$toString(
													A2(_elm_lang$core$Maybe$withDefault, '', stock.poster))))),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('tutor-content'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h5,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('tutor-title'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											_user$project$Teste$tiraAspas(
												_elm_lang$core$Basics$toString(stock.nome))),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href('#'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('btn-ver'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onClick(
																	_user$project$Teste$VerSerie(stock)),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Visualizar'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewPopulares = function (popular) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('item'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('tutor-block project wow animated animated4 fadeInLeft'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('tutor-img'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'http://image.tmdb.org/t/p/w185/',
											_user$project$Teste$tiraAspas(
												_elm_lang$core$Basics$toString(
													A2(_elm_lang$core$Maybe$withDefault, '', popular.poster))))),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('project-hover'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$h1,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('title-item-carousel'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_user$project$Teste$tiraAspas(
														_elm_lang$core$Basics$toString(popular.nome))),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$hr,
												{ctor: '[]'},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$p,
													{ctor: '[]'},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('ver-mais'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onClick(
																	_user$project$Teste$VerSerie(popular)),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('visualizar'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewPopulares2 = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('espac'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h1,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('title-tvbox'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('AS MAIS POPULARES'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('owl-populares'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('owl-carousel owl-theme'),
							_1: {ctor: '[]'}
						}
					},
					A2(_elm_lang$core$List$map, _user$project$Teste$viewPopulares, model.seriespopulares)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$viewAiringToday = function (airingtodayy) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('item'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('tutor-block project wow animated animated4 fadeInLeft'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('tutor-img'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'http://image.tmdb.org/t/p/w185/',
											_user$project$Teste$tiraAspas(
												_elm_lang$core$Basics$toString(
													A2(_elm_lang$core$Maybe$withDefault, '', airingtodayy.poster))))),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('project-hover'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$h1,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('title-item-carousel'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_user$project$Teste$tiraAspas(
														_elm_lang$core$Basics$toString(airingtodayy.nome))),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$hr,
												{ctor: '[]'},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$button,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('ver-mais'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(
																_user$project$Teste$VerSerie(airingtodayy)),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('visualizar'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$viewAiringToday2 = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('espac'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h1,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('title-tvbox'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('NO AR HOJE'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('owl-airingtoday'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('owl-carousel owl-theme'),
							_1: {ctor: '[]'}
						}
					},
					A2(_elm_lang$core$List$map, _user$project$Teste$viewAiringToday, model.seriesairingtoday)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$MudarPagina = function (a) {
	return {ctor: 'MudarPagina', _0: a};
};
var _user$project$Teste$ResCadSerieAiringToday = function (a) {
	return {ctor: 'ResCadSerieAiringToday', _0: a};
};
var _user$project$Teste$CadSerieAiringToday = function (a) {
	return {ctor: 'CadSerieAiringToday', _0: a};
};
var _user$project$Teste$RespostaAiringToday = function (a) {
	return {ctor: 'RespostaAiringToday', _0: a};
};
var _user$project$Teste$getAiringToday = A2(
	_elm_lang$http$Http$send,
	_user$project$Teste$RespostaAiringToday,
	A2(_elm_lang$http$Http$get, 'https://api.themoviedb.org/3/tv/airing_today?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR', _user$project$Decodes$decodePopulares));
var _user$project$Teste$ResCadSeriesPopulares = function (a) {
	return {ctor: 'ResCadSeriesPopulares', _0: a};
};
var _user$project$Teste$CadSeriePopulares = function (a) {
	return {ctor: 'CadSeriePopulares', _0: a};
};
var _user$project$Teste$RespostaSeriesPopulares = function (a) {
	return {ctor: 'RespostaSeriesPopulares', _0: a};
};
var _user$project$Teste$getPopulares = A2(
	_elm_lang$http$Http$send,
	_user$project$Teste$RespostaSeriesPopulares,
	A2(_elm_lang$http$Http$get, 'https://api.themoviedb.org/3/tv/popular?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR', _user$project$Decodes$decodePopulares));
var _user$project$Teste$ResCadastrarSerie = function (a) {
	return {ctor: 'ResCadastrarSerie', _0: a};
};
var _user$project$Teste$CadastrarSerie = function (a) {
	return {ctor: 'CadastrarSerie', _0: a};
};
var _user$project$Teste$RespostaSearch = function (a) {
	return {ctor: 'RespostaSearch', _0: a};
};
var _user$project$Teste$getStocks = function (symb) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Teste$RespostaSearch,
		A2(
			_elm_lang$http$Http$get,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'https://api.themoviedb.org/3/search/tv?api_key=45167e2360d3bc4cac7f0e985b36bae5&language=pt-BR&query=',
				_user$project$Teste$mudaString(symb)),
			_user$project$Decodes$decodeStock));
};
var _user$project$Teste$SymbolSearch = function (a) {
	return {ctor: 'SymbolSearch', _0: a};
};
var _user$project$Teste$SubmitSearch = {ctor: 'SubmitSearch'};
var _user$project$Teste$viewSearch = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$form,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-search'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onSubmit(_user$project$Teste$SubmitSearch),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('input-group'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('input-custom'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$type_('text'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$required(true),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$placeholder('Pesquisar'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$SymbolSearch),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('input-group-btn'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$button,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$i,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('fa fa-search'),
																_1: {ctor: '[]'}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A2(_elm_lang$core$List$map, _user$project$Teste$viewStock, model.stocks)),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Teste$Login = function (a) {
	return {ctor: 'Login', _0: a};
};
var _user$project$Teste$RespostaLogin = function (a) {
	return {ctor: 'RespostaLogin', _0: a};
};
var _user$project$Teste$CadastrarUsuario = function (a) {
	return {ctor: 'CadastrarUsuario', _0: a};
};
var _user$project$Teste$RespostaCadastro = function (a) {
	return {ctor: 'RespostaCadastro', _0: a};
};
var _user$project$Teste$ConfirmarSenha = function (a) {
	return {ctor: 'ConfirmarSenha', _0: a};
};
var _user$project$Teste$Senha = function (a) {
	return {ctor: 'Senha', _0: a};
};
var _user$project$Teste$Email = function (a) {
	return {ctor: 'Email', _0: a};
};
var _user$project$Teste$viewLogin = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container align'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('title-tvbox text-center'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('tvbox'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('col-md-4 col-md-offset-4 col-xs-12'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$required(true),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(model.usuario.email),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$placeholder('Email'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Email),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('password'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$required(true),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(model.usuario.senha),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$placeholder('Senha'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Senha),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('btn-padrao'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Teste$Login(model.usuario)),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Login'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$Sobrenome = function (a) {
	return {ctor: 'Sobrenome', _0: a};
};
var _user$project$Teste$Nome = function (a) {
	return {ctor: 'Nome', _0: a};
};
var _user$project$Teste$viewCadastro = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container align'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('title-tvbox text-center'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('cadastro'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('col-md-4 col-md-offset-4 col-xs-12'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$required(true),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('Nome'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Nome),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('text'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$required(true),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$placeholder('Sobrenome'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Sobrenome),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('text'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$required(true),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$placeholder('Email'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Email),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$type_('password'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$required(true),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$placeholder('Senha'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$Senha),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$input,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('input-custom-register'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$type_('password'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$required(true),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$placeholder('Confirme sua senha'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$ConfirmarSenha),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('btn-padrao'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(
															_user$project$Teste$CadastrarUsuario(model.usuario)),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Cadastrar'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: _user$project$Teste$viewValidation(model),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$PagSerieGenero = {ctor: 'PagSerieGenero'};
var _user$project$Teste$PagSerie = {ctor: 'PagSerie'};
var _user$project$Teste$PagStock = {ctor: 'PagStock'};
var _user$project$Teste$PagLogin = {ctor: 'PagLogin'};
var _user$project$Teste$PagValidation = {ctor: 'PagValidation'};
var _user$project$Teste$PagCadastro = {ctor: 'PagCadastro'};
var _user$project$Teste$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'MudarPagina':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{view: _p4._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Nome':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							usuario: function (y) {
								return _elm_lang$core$Native_Utils.update(
									y,
									{nome: _p4._0});
							}(model.usuario)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Sobrenome':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							usuario: function (y) {
								return _elm_lang$core$Native_Utils.update(
									y,
									{sobrenome: _p4._0});
							}(model.usuario)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Email':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							usuario: function (y) {
								return _elm_lang$core$Native_Utils.update(
									y,
									{email: _p4._0});
							}(model.usuario)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Senha':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							usuario: function (y) {
								return _elm_lang$core$Native_Utils.update(
									y,
									{senha: _p4._0});
							}(model.usuario)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ConfirmarSenha':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							usuario: function (y) {
								return _elm_lang$core$Native_Utils.update(
									y,
									{confirmarSenha: _p4._0});
							}(model.usuario)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'RespostaCadastro':
				var _p5 = _p4._0;
				if (_p5.ctor === 'Err') {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								view: _elm_lang$core$Native_Utils.eq(_p5._0.status.code, 201) ? _user$project$Teste$PagLogin : _user$project$Teste$PagCadastro
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'CadastrarUsuario':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Teste$RespostaCadastro,
						A3(
							_user$project$Teste$postWhole,
							'https://meangirls-raquelvilione.c9users.io/usuario/inserir',
							_elm_lang$http$Http$jsonBody(
								_user$project$Encodes$encodeUsuario(_p4._0)),
							_elm_lang$core$Json_Decode$int))
				};
			case 'RespostaLogin':
				var _p6 = _p4._0;
				if (_p6.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p6._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{mensagem: 'LOGADO'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'Login':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Teste$RespostaLogin,
						A3(
							_elm_lang$http$Http$post,
							'https://meangirls-raquelvilione.c9users.io/login/',
							_elm_lang$http$Http$jsonBody(
								A2(_user$project$Encodes$encodeDadosUsuario, model.usuario.email, model.usuario.senha)),
							_user$project$Decodes$decodeRespLogin))
				};
			case 'SymbolSearch':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{symbol: _p4._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitSearch':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Teste$getStocks(model.symbol)
				};
			case 'RespostaSearch':
				var _p7 = _p4._0;
				if (_p7.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								symbol: _elm_lang$core$Basics$toString(_p7._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{stocks: _p7._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'CadastrarSerie':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Teste$ResCadastrarSerie,
						A3(
							_elm_lang$http$Http$post,
							'https://meangirls-raquelvilione.c9users.io/serie/inserir',
							_elm_lang$http$Http$jsonBody(
								_user$project$Encodes$encodeSerie(_p4._0)),
							_elm_lang$core$Json_Decode$int))
				};
			case 'ResCadastrarSerie':
				var _p8 = _p4._0;
				if (_p8.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								symbol: _elm_lang$core$Basics$toString(_p8._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								symbol: _elm_lang$core$Basics$toString(_p8._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'RespostaSeriesPopulares':
				var _p9 = _p4._0;
				if (_p9.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p9._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{seriespopulares: _p9._0, mensagem: 'ok'}),
						_1: _user$project$Portas$carousel('')
					};
				}
			case 'CadSeriePopulares':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Teste$ResCadSeriesPopulares,
						A3(
							_elm_lang$http$Http$post,
							'https://meangirls-raquelvilione.c9users.io/serie/inserir',
							_elm_lang$http$Http$jsonBody(
								_user$project$Encodes$encodePopulares(_p4._0)),
							_elm_lang$core$Json_Decode$int))
				};
			case 'ResCadSeriesPopulares':
				var _p10 = _p4._0;
				if (_p10.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p10._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'RespostaAiringToday':
				var _p11 = _p4._0;
				if (_p11.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p11._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{seriesairingtoday: _p11._0, mensagem: 'ok'}),
						_1: _user$project$Portas$carousel('')
					};
				}
			case 'CadSerieAiringToday':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Teste$ResCadSerieAiringToday,
						A3(
							_elm_lang$http$Http$post,
							'https://meangirls-raquelvilione.c9users.io/serie/inserir',
							_elm_lang$http$Http$jsonBody(
								_user$project$Encodes$encodeAiringToday(_p4._0)),
							_elm_lang$core$Json_Decode$int))
				};
			case 'ResCadSerieAiringToday':
				var _p12 = _p4._0;
				if (_p12.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p12._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'VerSerie':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{serieAtual: _p4._0, view: _user$project$Teste$PagSerie}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitTemporada':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Teste$getTemporadas(
						_elm_lang$core$Basics$toString(_p4._0))
				};
			case 'RespostaTemp':
				var _p13 = _p4._0;
				if (_p13.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{mensagem: 'hioyioshjdf'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{temporadas: _p13._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'SubmitEpisodios':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Teste$getEpisodios(
						{
							ctor: '_Tuple2',
							_0: _elm_lang$core$Basics$toString(_p4._0),
							_1: _elm_lang$core$Basics$toString(_p4._1)
						})
				};
			case 'RespostaEps':
				var _p14 = _p4._0;
				if (_p14.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{mensagem: 'hioyioshjdf'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{episodios: _p14._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'RespostaG':
				var _p15 = _p4._0;
				if (_p15.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p15._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{generos: _p15._0, mensagem: 'ok'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'GeneroEscolhido':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{generoEscolhido: _p4._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Buscar':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Teste$getSeriesGenero(model.generoEscolhido)
				};
			default:
				var _p16 = _p4._0;
				if (_p16.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p16._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{seriesGenero: _p16._0, mensagem: 'blz', view: _user$project$Teste$PagSerieGenero}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
		}
	});
var _user$project$Teste$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$header,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('header'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('headroom'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('navbar navbar-fixed-top navbar-inverse'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('navbar-header'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('navbar-toggle'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$type_('button'),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$span,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('icon-bar'),
															_1: {ctor: '[]'}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$span,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('icon-bar'),
																_1: {ctor: '[]'}
															},
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$span,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('icon-bar'),
																	_1: {ctor: '[]'}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$a,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('navbar-brand title-tvbox'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$href('#'),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('tvbox'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('collapse navbar-collapse'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$ul,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('nav navbar-nav navbar-right'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$li,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$a,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$href('#'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Events$onClick(
																				_user$project$Teste$MudarPagina(_user$project$Teste$PagLogin)),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('Login'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$li,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$a,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$href('#'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$html$Html_Events$onClick(
																					_user$project$Teste$MudarPagina(_user$project$Teste$PagCadastro)),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('Cadastro'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$li,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$a,
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$href('#'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$html$Html_Events$onClick(
																						_user$project$Teste$MudarPagina(_user$project$Teste$PagStock)),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text('Logado'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$div,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$id('genres-select'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('navbar-form navbar-right'),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$div,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('form-group'),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$select,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Events$onInput(_user$project$Teste$GeneroEscolhido),
																			_1: {ctor: '[]'}
																		},
																		A2(_elm_lang$core$List$map, _user$project$Teste$viewGeneros, model.generos)),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$button,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Events$onClick(_user$project$Teste$Buscar),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$i,
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$class('fa fa-search'),
																				_1: {ctor: '[]'}
																			},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: function () {
					var _p17 = model.view;
					switch (_p17.ctor) {
						case 'PagCadastro':
							return _user$project$Teste$viewCadastro(model);
						case 'PagValidation':
							return _user$project$Teste$viewValidation(model);
						case 'PagLogin':
							return _user$project$Teste$viewLogin(model);
						case 'PagStock':
							return A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _user$project$Teste$viewSearch(model),
									_1: {
										ctor: '::',
										_0: _user$project$Teste$viewPopulares2(model),
										_1: {
											ctor: '::',
											_0: _user$project$Teste$viewAiringToday2(model),
											_1: {ctor: '[]'}
										}
									}
								});
						case 'PagIndex':
							return _user$project$Teste$viewIndex(model);
						case 'PagSerie':
							return _user$project$Teste$viewSerie(model);
						default:
							return _user$project$Teste$viewSeriesGenero(model);
					}
				}(),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Teste$PagIndex = {ctor: 'PagIndex'};
var _user$project$Teste$init = _user$project$Teste$Model(
	A6(_user$project$Aliases$DadosUsuario, '', '', '', '', '', ''))(
	A7(_user$project$Aliases$Stock, 0, '', 0, _elm_lang$core$Maybe$Nothing, '', 0, ''))(
	{ctor: '[]'})(
	{ctor: '[]'})('')('')(
	{ctor: '[]'})(
	A7(_user$project$Aliases$Populares, 0, '', 0, _elm_lang$core$Maybe$Nothing, '', 0, ''))(
	A7(_user$project$Aliases$AiringToday, 0, '', 0, _elm_lang$core$Maybe$Nothing, '', 0, ''))(
	{
		ctor: '::',
		_0: A5(_user$project$Aliases$Temporadas, 0, 0, '', '', 0),
		_1: {ctor: '[]'}
	})(
	{
		ctor: '::',
		_0: A3(_user$project$Aliases$Episodios, 0, 0, ''),
		_1: {ctor: '[]'}
	})(
	{
		ctor: '::',
		_0: A2(_user$project$Aliases$Generos, 0, ''),
		_1: {ctor: '[]'}
	})('')(
	A2(_user$project$Aliases$SeriesGenero, '', 0))(
	{
		ctor: '::',
		_0: A2(_user$project$Aliases$SeriesGenero, '', 0),
		_1: {ctor: '[]'}
	})(_user$project$Teste$PagIndex);
var _user$project$Teste$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: _user$project$Teste$init,
			_1: _elm_lang$core$Platform_Cmd$batch(
				{
					ctor: '::',
					_0: _user$project$Teste$getPopulares,
					_1: {
						ctor: '::',
						_0: _user$project$Teste$getAiringToday,
						_1: {
							ctor: '::',
							_0: _user$project$Teste$getGeneros,
							_1: {ctor: '[]'}
						}
					}
				})
		},
		view: _user$project$Teste$view,
		update: _user$project$Teste$update,
		subscriptions: function (_p18) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
